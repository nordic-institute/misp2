plugins {
  id 'java'
  id 'war'
}

repositories {
  mavenCentral()
}

dependencies {
  implementation 'jakarta.xml.ws:jakarta.xml.ws-api:2.3.3'
  implementation 'dom4j:dom4j:1.6.1'
  implementation 'javax.transaction:jta:1.1'
  implementation 'commons-configuration:commons-configuration:1.10'
  implementation 'net.sourceforge.htmlcleaner:htmlcleaner:2.24'
  implementation 'org.jsoup:jsoup:1.13.1'
  implementation 'com.unboundid:unboundid-ldapsdk:5.1.4'
  implementation 'org.springframework:spring-tx:5.3.6'
  implementation 'org.springframework:spring-webmvc:5.3.6'
  implementation 'org.springframework:spring-orm:5.3.6'
  implementation 'opensymphony:sitemesh:2.4.2'
  implementation 'org.postgresql:postgresql:42.2.19'
  implementation 'org.hibernate:hibernate-core:5.4.30.Final'
  implementation 'org.hibernate:hibernate-entitymanager:5.4.30.Final'
  implementation 'org.apache.struts:struts2-spring-plugin:2.5.30'
  implementation 'org.apache.struts:struts2-junit-plugin:2.5.30'
  implementation 'org.apache.struts:struts2-sitemesh-plugin:2.5.30'
  implementation 'org.apache.struts:struts2-core:2.5.30'
  implementation 'net.sf.saxon:Saxon-HE:9.5.1-8'
  implementation 'cglib:cglib-nodep:3.3.0'
  implementation 'org.apache.logging.log4j:log4j-slf4j-impl:2.17.1'
  implementation 'org.apache.logging.log4j:log4j-1.2-api:2.17.1'
  implementation 'org.apache.logging.log4j:log4j-web:2.17.1'
  implementation 'org.apache.commons:commons-lang3:3.12.0'
  implementation 'commons-lang:commons-lang:2.6'
  implementation 'org.freemarker:freemarker:2.3.31'
  implementation 'org.springframework:spring-context:5.3.6'
  implementation 'org.springframework:spring-context-support:5.3.6'
  implementation 'org.springframework:spring-web:5.3.6'
  implementation 'ee.sk.mid:mid-rest-java-client:1.3'
  implementation 'org.digidoc4j:digidoc4j:4.1.1'
  implementation 'org.apache.commons:commons-compress:1.20'
  implementation 'commons-codec:commons-codec:1.15'
  implementation 'javax.mail:javax.mail-api:1.6.2'
  implementation 'org.commonmark:commonmark:0.17.1'
  implementation 'org.commonmark:commonmark-ext-autolink:0.17.1'
  implementation 'org.commonmark:commonmark-ext-gfm-tables:0.17.1'
  implementation 'org.commonmark:commonmark-ext-gfm-strikethrough:0.17.1'
  implementation 'org.commonmark:commonmark-ext-heading-anchor:0.17.1'
  implementation 'org.commonmark:commonmark-ext-ins:0.17.1'
  implementation 'com.networknt:openapi-parser:1.6.32'
  implementation 'com.github.librepdf:openpdf:1.3.29'
  implementation 'org.xhtmlrenderer:flying-saucer-pdf-openpdf:9.1.22'
  runtimeOnly 'com.sun.xml.ws:jaxws-rt:2.3.3'
  testImplementation 'junit:junit:4.13.2'
  testImplementation 'org.seleniumhq.selenium:selenium-api:4.3.0'
  testImplementation 'org.seleniumhq.selenium:selenium-java:4.3.0'
  testImplementation 'com.google.guava:guava:30.1-jre'
  providedCompile 'javax.servlet:javax.servlet-api:3.1.0'
  providedCompile files('libs/esteidtestcerts.jar')
  implementation files('libs/iaikPkcs11Wrapper.jar')
  implementation parent.buildOrbeonFilter.outputs.files
}

group = 'misp2'
version = '2.9.0'
description = 'MISP2 web application'
java.sourceCompatibility = JavaVersion.VERSION_1_8


tasks.withType(JavaCompile) {
  options.encoding = 'UTF-8'
}

test {
  systemProperty 'it.screenshots', "${buildDir}/it-screenshots"
}

war {
  archiveFileName = 'misp2.war'
  rootSpec.exclude('**/*.dev')
  rootSpec.exclude('**/*.it')
  manifest {
    attributes('App-Version': archiveVersion)
  }
}

tasks.register('devWar', War) {
  archiveBaseName = 'misp2-dev'
  rootSpec.eachFile { file ->
   if (['config.cfg', 'log4j2.xml'].contains(file.name)) {
     file.exclude()
   } 
   if (file.name.endsWith('.dev')) {
     file.name = file.name - '.dev'
   }
  }
  outputs.upToDateWhen { false }
}

tasks.register('itTestWar', War) {
  archiveFileName = 'misp2.war'
  rootSpec.eachFile { file ->
   if (['config.cfg', 'log4j2.xml'].contains(file.name)) {
     file.exclude()
   } 
   if (file.name.endsWith('.it')) {
     file.name = file.name - '.it'
   }
  }
  outputs.upToDateWhen { false }
}
